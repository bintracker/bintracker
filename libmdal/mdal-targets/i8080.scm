(asm-target

 endian: little

 registers: ((psw 6) (sp 6)
	     (b 0) (c 1) (d 2) (e 3) (h 4) (l 5) (m 6) (a 7))

 register-sets: ((r8 (a b c d e h l m))
		 (r16+psw (b d h psw))
		 (r16+sp (b d h sp)))

 instructions:
 ((aci (1 ((numeric (#xce (lsb %op1))))))
  (adc (1 (((register 'r8) ((+ #x88 (register-value %op1)))))))
  (add (1 (((register 'r8) ((+ #x80 (register-value %op1)))))))
  (adi (1 ((numeric (#xc6 (lsb %op1))))))
  (ana (1 (((register 'r8) ((+ #xa0 (register-value %op1)))))))
  (ani (1 ((numeric (#xe6 (lsb %op1))))))
  (call (1 ((numeric (#xcd (lsb %op1) (msb %op1))))))
  (cc (1 ((numeric (#xdc (lsb %op1) (msb %op1))))))
  (cma (0 (#x2f)))
  (cmc (0 (#x3f)))
  (cmp (1 (((register 'r8) ((+ #xb8 (register-value %op1)))))))
  (cm (1 ((numeric (#xfc (lsb %op1) (msb %op1))))))
  (cnc (1 ((numeric (#xd4 (lsb %op1) (msb %op1))))))
  (cnz (1 ((numeric (#xc4 (lsb %op1) (msb %op1))))))
  (cpi (1 ((numeric (#xfe (lsb %op1))))))
  (cpe (1 ((numeric (#xec (lsb %op1) (msb %op1))))))
  (cpo (1 ((numeric (#xe4 (lsb %op1) (msb %op1))))))
  (cp (1 ((numeric (#xf4 (lsb %op1) (msb %op1))))))
  (cz (1 ((numeric (#xcc (lsb %op1) (msb %op1))))))
  (daa (0 (#x27)))
  (dad (1 (((register 'r16+sp) ((+ 9 (* 8 (register-value %op1))))))))
  (dcr (1 (((register 'r8) ((+ 5 (* 8 (register-value %op1))))))))
  (dcx (1 (((register 'r16+sp) ((+ #xb (* 8 (register-value %op1))))))))
  (di (0 (#xf3)))
  (ei (0 (#xfb)))
  (hlt (0 (#x76)))
  (inr (1 (((register 'r8) ((+ 4 (* 8 (register-value %op1))))))))
  (inx (1 (((register 'r16+sp) ((+ 3 (* 8 (register-value %op1))))))))
  (in (1 ((numeric (#xdb (lsb %op1))))))
  (jc (1 ((numeric (#xda (lsb %op1) (msb %op1))))))
  (jmp (1 ((numeric (#xc3 (lsb %op1) (msb %op1))))))
  (jm (1 ((numeric (#xfa (lsb %op1) (msb %op1))))))
  (jnc (1 ((numeric (#xd2 (lsb %op1) (msb %op1))))))
  (jnz (1 ((numeric (#xc2 (lsb %op1) (msb %op1))))))
  (jpe (1 ((numeric (#xea (lsb %op1) (msb %op1))))))
  (jpo (1 ((numeric (#xe2 (lsb %op1) (msb %op1))))))
  (jp (1 ((numeric (#xf2 (lsb %op1) (msb %op1))))))
  (jz (1 ((numeric (#xca (lsb %op1) (msb %op1))))))
  (ldax (1 (((is #\b) (#xa))
	    ((is #\d) (#x1a)))))
  (lda (1 ((numeric (#x3a (lsb %op1) (msb %op1))))))
  (lhld (1 ((numeric (#x2a (lsb %op1) (msb %op1))))))
  (lxi (2 (((register 'r16+sp)
	    ((numeric ((+ 1 (* 8 (register-value %op1)))
		       (lsb %op2)
		       (msb %op2))))))))
  (mov (2 (((register 'r8) (((register 'r8) ((+ #x40
						 (* 8 (register-value %op1))
						 (register-value %op2)))))))))
  (mvi (2 (((register 'r8) ((numeric ((+ 6 (* 8 (register-value %op1)))
				      (lsb %op2))))))))
  (nop (0 (#x00)))
  (ora (1 (((register 'r8) ((+ #xb0 (register-value %op1)))))))
  (ori (1 ((numeric (#xf6 (lsb %op1))))))
  (out (1 ((numeric (#xd3 (lsb %op1))))))
  (pop (1 (((register 'r16+psw) ((+ #xc1 (* 8 (register-value %op1))))))))
  (push (1 (((register 'r16+psw) ((+ #xc5 (* 8 (register-value %op1))))))))
  (ral (0 (#x17)))
  (rar (0 (#x1f)))
  (rc (0 (#xd8)))
  (rlc (0 (#x7)))
  (ret (0 (#xc9)))
  (rm (0 (#xf8)))
  (rnc (0 (#xd0)))
  (rnz (0 (#xc0)))
  (rpe (0 (#xe8)))
  (rpo (0 (#xe0)))
  (rp (0 (#xf0)))
  (rrc (0 (#xf)))
  (rst (1 (((is #\0) (#xc7))
	   ((is #\1) (#xcf))
	   ((is #\2) (#xd7))
	   ((is #\3) (#xdf))
	   ((is #\4) (#xe7))
	   ((is #\5) (#xef))
	   ((is #\6) (#xf7))
	   ((is #\7) (#xff)))))
  (rz (0 (#xc8)))
  (sbb (1 (((register 'r8) ((+ #x98 (register-value %op1)))))))
  (sbi (1 ((numeric (#xde (lsb %op1))))))
  (shld (1 ((numeric (#x22 (lsb %op1) (msb %op1))))))
  (sphl (0 (#xf9)))
  (stax (1 (((is #\b) (2))
	    ((is #\d) (#x12)))))
  (sta (1 ((numeric (#x32 (lsb %op1) (msb %op1))))))
  (stc (0 (#x37)))
  (sub (1 (((register 'r8) ((+ #x90 (register-value %op1)))))))
  (sui (1 ((numeric (#xd6 (lsb %op1))))))
  (xchg (0 (#xeb)))
  (xra (1 (((register 'r8) ((+ #xa8 (register-value %op1)))))))
  (xri (1 ((numeric (#xee (lsb %op1))))))
  (xthl (0 (#xe3)))))
