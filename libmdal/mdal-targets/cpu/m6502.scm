(asm-target

 id: m6502

 byte-order: little-endian

 registers: ((x 4) (y 0) (a 0))

 register-sets: ((ptr (x y))
		 (accu (a))
		 (regx (x))
		 (regy (y)))

 addressing-modes: ((imm (preceded-by* numeric (is #\#)))
		    (zp (any-of (bind a-number
				      (lambda (r)
					(if (and (>= r -128) (<= r 255))
					    (result r)
					    fail)))
				(preceded-by* numeric (is #\<))))
		    (ind (in-parens numeric))
		    (izx-part1 (preceded-by* numeric (is  #\()))
		    (izx-part2 (char-seq "x)")))

 instructions:
 ((adc (1 (((address 'imm) (#x69 (lsb %op1)))
	   ((address 'zp) (#x65 (lsb %op1)))
	   ;; absolute
	   (numeric (#x6d (lsb %op1) (msb %op1)))))
       (2 (;; zeropage,x
	   ((address 'zp) (((register 'regx) (#x75 (lsb %op1)))))
	   ;; indirect,x
	   ((address 'izx-part1) (((address 'izx-part2) (#x61 (lsb %op1)))))
	   ;; indirect,y
	   ((address 'ind) (((register 'regy) (#x71 (lsb %op1)))))
	   ;; absolute,x/y
	   (numeric
	    (((register 'ptr)
	      ((+ #x79 (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (ahx (2 (((address 'ind) (((register 'regy) (#x93 (lsb %op1)))))
	   (numeric (((register 'regy) (#x9f (lsb %op1) (msb %op1))))))))
  (and (1 (((address 'imm) (#x29 (lsb %op1)))
	   ((address 'zp) (#x25 (lsb %op1)))
	   (numeric (#x2d (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#x35 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#x21 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#x31 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #x39 (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (anc (1 (((address 'imm) (#x0b (lsb %op1))))))
  (alr (1 (((address 'imm) (#x4b (lsb %op1))))))
  (arr (1 (((address 'imm) (#x6b (lsb %op1))))))
  (asl (0 (#x0a))
       (1 (((register 'accu) (#x0a))
	   ((address 'zp) (#x06 (lsb %op1)))
	   (numeric (#x0e (lsb %op1) (msb %op1)))))
       (2 (((address 'izx-part1) (((address 'izx-part2) (#x16 (lsb %op1)))))
	   (numeric (((register 'regx) (#x1e (lsb %op1) (msb %op1))))))))
  (aso (1 (((address 'zp) (#x07 (lsb %op1)))
	   (numeric (#x0f (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#x17 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#x03 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#x13 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #x1b (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (axs (1 (((address 'imm) (#xcb (lsb %op1))))))
  (bit (1 (((address 'zp) (#x24 (lsb %op1)))
	   (numeric (#x2c (lsb %op1) (msb %op1))))))
  (bcc (1 (((signed-number-range 8) (#x90 (lsb %op1)))
	   (numeric (#x90 (lsb (- %op1 (+ 2 current-origin))))))))
  (bcs (1 (((signed-number-range 8) (#xb0 (lsb %op1)))
	   (numeric (#xb0 (lsb (- %op1 (+ 2 current-origin))))))))
  (beq (1 (((signed-number-range 8) (#xf0 (lsb %op1)))
	   (numeric (#xf0 (lsb (- %op1 (+ 2 current-origin))))))))
  (bmi (1 (((signed-number-range 8) (#x30 (lsb %op1)))
	   (numeric (#x30 (lsb (- %op1 (+ 2 current-origin))))))))
  (bne (1 (((signed-number-range 8) (#xd0 (lsb %op1)))
	   (numeric (#xd0 (lsb (- %op1 (+ 2 current-origin))))))))
  (bpl (1 (((signed-number-range 8) (#x10 (lsb %op1)))
	   (numeric (#x10 (lsb (- %op1 (+ 2 current-origin))))))))
  (bvc (1 (((signed-number-range 8) (#x50 (lsb %op1)))
	   (numeric (#x50 (lsb (- %op1 (+ 2 current-origin))))))))
  (bvs (1 (((signed-number-range 8) (#x70 (lsb %op1)))
	   (numeric (#x70 (lsb (- %op1 (+ 2 current-origin))))))))
  (brk (0 (#x00)))
  (clc (0 (#x18)))
  (cld (0 (#xd8)))
  (cli (0 (#x58)))
  (clv (0 (#xb8)))
  (cmp (1 (((address 'imm) (#xc9 (lsb %op1)))
	   ((address 'zp) (#xc5 (lsb %op1)))
	   (numeric (#xcd (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#xd5 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#xc1 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#xd1 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #xd9 (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (cpx (1 (((address 'imm) (#xe0 (lsb %op1)))
	   ((address 'zp) (#xe4 (lsb %op1)))
	   (numeric (#xec (lsb %op1) (msb %op1))))))
  (cpy (1 (((address 'imm) (#xc0 (lsb %op1)))
	   ((address 'zp) (#xc4 (lsb %op1)))
	   (numeric (#xcc (lsb %op1) (msb %op1))))))
  (dcp (1 (((address 'zp) (#xc7 (lsb %op1)))
	   (numeric (#xcf (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#xd7 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#xc3 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#xd3 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #xdb (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (dec (1 (((address 'zp) (#xc6 (lsb %op1)))
	   (numeric (#xce (lsb %op1) (msb %op1)))))
       (2 (((address 'izx-part1) (((address 'izx-part2) (#xd6 (lsb %op1)))))
	   (numeric (((register 'regx) (#xde (lsb %op1) (msb %op1))))))))
  (dex (0 (#xca)))
  (dey (0 (#x88)))
  (eor (1 (((address 'imm) (#x49 (lsb %op1)))
	   ((address 'zp) (#x45 (lsb %op1)))
	   (numeric (#x4d (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#x55 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#x41 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#x51 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #x59 (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (hlt (0 (#x02)))
  (inc (1 (((address 'zp) (#xe6 (lsb %op1)))
	   (numeric (#xee (lsb %op1) (msb %op1)))))
       (2 (((address 'izx-part1) (((address 'izx-part2) (#xf6 (lsb %op1)))))
	   (numeric (((register 'regx) (#xfe (lsb %op1) (msb %op1))))))))
  (inx (0 (#xe8)))
  (iny (0 (#xc8)))
  (isb (1 (((address 'zp) (#xe7 (lsb %op1)))
	   (numeric (#xef (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#xf7 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#xe3 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#xf3 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #xfb (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (isc (1 (((address 'zp) (#xe7 (lsb %op1)))
	   (numeric (#xef (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#xf7 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#xe3 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#xf3 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #xfb (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (jmp (1 ((numeric (#x4c (lsb %op1) (msb %op1)))
	   ((address 'ind) (#x6c (lsb %op1) (msb %op1))))))
  (jsr (1 ((numeric (#x20 (lsb %op1) (msb %op1))))))
  (kil (0 (#x02)))
  (lar (2 ((numeric (((register 'regy) (#xbb (lsb %op1) (msb %op1))))))))
  (las (2 ((numeric (((register 'regy) (#xbb (lsb %op1) (msb %op1))))))))
  (lax (1 (((address 'imm) (#xab (lsb %op1)))
	   ((address 'zp) (#xa7 (lsb %op1)))
	   (numeric (#xaf (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regy) (#xb7 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#xa3 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#xb3 (lsb %op1)))))
	   (numeric (((register 'regy) (#xbf (lsb %op1) (msb %op1))))))))
  (lda (1 (((address 'imm) (#xa9 (lsb %op1)))
	   ((address 'zp) (#xa5 (lsb %op1)))
	   (numeric (#xad (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#xb5 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#xa1 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#xb1 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #xb9 (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (ldx (1 (((address 'imm) (#xa2 (lsb %op1)))
	   ((address 'zp) (#xa6 (lsb %op1)))
	   (numeric (#xae (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regy) (#xb6 (lsb %op1)))))
	   (numeric (((register 'regy) (#xbe (lsb %op1) (msb %op1))))))))
  (ldy (1 (((address 'imm) (#xa0 (lsb %op1)))
	   ((address 'zp) (#xa4 (lsb %op1)))
	   (numeric (#xac (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#xb4 (lsb %op1)))))
	   (numeric (((register 'regx) (#xbc (lsb %op1) (msb %op1))))))))
  (lse (1 (((address 'zp) (#x47 (lsb %op1)))
	   (numeric (#x4f (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#x57 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#x43 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#x53 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #x5b (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (lsr (0 (#x4a))
       (1 (((register 'accu) (#x4a))
	   ((address 'zp) (#x46 (lsb %op1)))
	   (numeric (#x4e (lsb %op1) (msb %op1)))))
       (2 (((address 'izx-part1) (((address 'izx-part2) (#x56 (lsb %op1)))))
	   (numeric (((register 'regx) (#x5e (lsb %op1) (msb %op1))))))))
  (nop (0 (#xea)))
  (ora (1 (((address 'imm) (#x09 (lsb %op1)))
	   ((address 'zp) (#x05 (lsb %op1)))
	   (numeric (#x0d (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#x15 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#x01 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#x11 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #x19 (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (rla (1 (((address 'zp) (#x27 (lsb %op1)))
	   (numeric (#x2f (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#x37 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#x23 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#x33 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #x3b (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (rol (0 (#x2a))
       (1 (((register 'accu) (#x2a))
	   ((address 'zp) (#x26 (lsb %op1)))
	   (numeric (#x2e (lsb %op1) (msb %op1)))))
       (2 (((address 'izx-part1) (((address 'izx-part2) (#x36 (lsb %op1)))))
	   (numeric (((register 'regx) (#x3e (lsb %op1) (msb %op1))))))))
  (ror (0 (#x6a))
       (1 (((register 'accu) (#x6a))
	   ((address 'zp) (#x66 (lsb %op1)))
	   (numeric (#x6e (lsb %op1) (msb %op1)))))
       (2 (((address 'izx-part1) (((address 'izx-part2) (#x76 (lsb %op1)))))
	   (numeric (((register 'regx) (#x7e (lsb %op1) (msb %op1))))))))
  (rra (1 (((address 'zp) (#x67 (lsb %op1)))
	   (numeric (#x6f (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#x77 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#x63 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#x73 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #x7b (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (rti (0 (#x40)))
  (rts (0 (#x60)))
  (pha (0 (#x48)))
  (php (0 (#x08)))
  (pla (0 (#x68)))
  (plp (0 (#x28)))
  (sax (1 (((address 'zp) (#x87 (lsb %op1)))
	   (numeric (#x8f (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regy) (#x97 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#x83 (lsb %op1))))))))
  (sbc (1 (((address 'imm) (#xe9 (lsb %op1)))
	   ((address 'zp) (#xe5 (lsb %op1)))
	   (numeric (#xed (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#xf5 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#xe1 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#xf1 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #xf9 (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (sec (0 (#x38)))
  (sed (0 (#xf8)))
  (sei (0 (#x78)))
  (shx (2 ((numeric (((register 'regy) (#x9e (lsb %op1) (msb %op1))))))))
  (shy (2 ((numeric (((register 'regx) (#x9c (lsb %op1) (msb %op1))))))))
  (slo (1 (((address 'zp) (#x07 (lsb %op1)))
	   (numeric (#x0f (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#x17 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#x03 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#x13 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #x1b (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (sre (1 (((address 'zp) (#x47 (lsb %op1)))
	   (numeric (#x4f (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#x57 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#x43 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#x53 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #x5b (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (sta (1 (((address 'zp) (#x85 (lsb %op1)))
	   (numeric (#x8d (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#x95 (lsb %op1)))))
	   ((address 'izx-part1) (((address 'izx-part2) (#x81 (lsb %op1)))))
	   ((address 'ind) (((register 'regy) (#x91 (lsb %op1)))))
	   (numeric
	    (((register 'ptr)
	      ((+ #x99 (register-value %op2)) (lsb %op1) (msb %op1))))))))
  (stx (1 (((address 'zp) (#x86 (lsb %op1)))
	   (numeric (#x8e (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regy) (#x96 (lsb %op1))))))))
  (sty (1 (((address 'zp) (#x84 (lsb %op1)))
	   (numeric (#x8c (lsb %op1) (msb %op1)))))
       (2 (((address 'zp) (((register 'regx) (#x94 (lsb %op1))))))))
  (tas (2 ((numeric (((register 'regy) (#x9b (lsb %op1) (msb %op1))))))))
  (tax (0 (#xaa)))
  (tay (0 (#xa8)))
  (tsx (0 (#xba)))
  (txa (0 (#x8a)))
  (txs (0 (#x9a)))
  (tya (0 (#x98)))
  (xaa (1 (((address 'imm) (#x8b (lsb %op1))))))))
